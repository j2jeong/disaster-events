name: Update Disaster Data

on:
  schedule:
    - cron: "0 23 * * *"   # 매일 08:00 KST
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          cd crawler
          pip install -r requirements.txt

      - name: Run crawler
        run: |
          cd crawler
          python rsoe_crawler.py
          ls -al  # 디버그

      - name: Copy data to docs/
        run: |
          mkdir -p docs/data
          if [ -f crawler/rsoe_events.json ]; then
            cp crawler/rsoe_events.json docs/data/events.json
          elif [ -f crawler/fixed_rsoe_events.json ]; then
            cp crawler/fixed_rsoe_events.json docs/data/events.json
          else
            echo "No new data file generated"; exit 1
          fi
          ls -al docs/data  # 디버그
      
      - name: Rewrite asset paths to relative + add cache buster
        run: |
          # 절대경로를 상대경로로 교정
          sed -i 's|href="/style\.css"|href="style.css"|g' docs/index.html
          sed -i 's|src="/script\.js"|src="script.js"|g' docs/index.html
          sed -i 's|href="/docs/style\.css"|href="style.css"|g' docs/index.html
          sed -i 's|src="/docs/script\.js"|src="script.js"|g' docs/index.html
          # 캐시 무효화를 위한 쿼리 추가
          sed -i "s|style\.css\"|style.css?v=${GITHUB_RUN_NUMBER}\"|g" docs/index.html
          sed -i "s|script\.js\"|script.js?v=${GITHUB_RUN_NUMBER}\"|g" docs/index.html

      - name: Commit updated site
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/index.html docs/data/events.json docs/style.css docs/script.js
          git commit -m "chore: update site assets (run ${GITHUB_RUN_NUMBER})" || echo "no changes"
          git push

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
