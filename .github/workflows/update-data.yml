name: Update Disaster Data

on:
  schedule:
    # Run every day at 08:00 KTC (23:00 UTC previous day)
    - cron: "0 23 * * *"
  workflow_dispatch:  # Allow manual trigger

# Add permissions for the workflow
permissions:
  contents: write

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r crawler/requirements.txt

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Run multi-source disaster data crawler
      run: |
        echo "🌍 Starting multi-source disaster data crawler..."
        echo "📡 Sources: RSOE, ReliefWeb, EMSC"
        python crawler/multi_source_crawler.py

    - name: Validate generated data
      run: |
        if [ -f docs/data/events.json ]; then
          echo "✅ Data file exists: docs/data/events.json"
          echo "📊 File size: $(du -h docs/data/events.json)"
          echo "🔢 Events count: $(grep -c '"event_id"' docs/data/events.json || echo '0')"

          # Check if JSON is valid
          python -c "import json; json.load(open('docs/data/events.json'))" && echo "✅ JSON is valid"
        else
          echo "❌ Error: docs/data/events.json not found"
          exit 1
        fi

        if [ -f docs/data/past_events.json ]; then
          echo "📚 Archive file exists: docs/data/past_events.json"
          echo "📊 Archive size: $(du -h docs/data/past_events.json)"
          echo "🔢 Archived events: $(grep -c '"event_id"' docs/data/past_events.json || echo '0')"
        fi

    - name: Update timestamp
      run: |
        echo "Last updated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" > docs/data/last_update.txt
        echo "Data sources: RSOE EDIS, ReliefWeb, EMSC" >> docs/data/last_update.txt
        echo "Run number: ${{ github.run_number }}" >> docs/data/last_update.txt

    - name: Commit and push changes
      run: |
        git add docs/data/

        if git diff --staged --quiet; then
          echo "📝 No changes in data files to commit."
        else
          echo "💾 Committing data changes..."
          git commit -m "chore: update disaster data (run ${{ github.run_number }})"

          # Push with retry logic
          for i in {1..3}; do
            if git push; then
              echo "✅ Successfully pushed on attempt $i"
              break
            elif [ $i -eq 3 ]; then
              echo "❌ Failed to push after 3 attempts"
              exit 1
            else
              echo "⚠️ Push failed, attempt $i. Retrying..."
              git fetch origin
              git rebase origin/main
              sleep $((i * 5))
            fi
          done
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: disaster-data-${{ github.run_number }}
        path: |
          docs/data/
          docs/data/backups/
        retention-days: 7

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: success()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        publish_branch: gh-pages
        force_orphan: false
        enable_jekyll: false
        cname: false