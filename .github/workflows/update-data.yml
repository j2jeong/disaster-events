# .github/workflows/update-data.yml

name: Update Disaster Data

on:
  schedule:
    - cron: "0 23 * * *"  # 매일 23:00 UTC = 한국 08:00
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r crawler/requirements.txt

      - name: Run crawler
        run: python crawler/rsoe_crawler.py
      
      - name: Archive previous events
        id: archive
        run: python crawler/merge_data.py

      - name: Verify data was updated
        run: |
          if [ -f docs/data/events.json ]; then
            echo "✅ Data file exists: docs/data/events.json"
            echo "File size: $(du -h docs/data/events.json)"
            echo "Events count: $(grep -c '"event_id"' docs/data/events.json)"
          else
            echo "⚠️ Warning: docs/data/events.json not found"
          fi
      
      - name: Create last update timestamp
        run: |
          echo "Last updated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" > docs/data/last_update.txt
      
      - name: Commit updated data
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # docs/data 폴더에 변경이 있을 경우에만 커밋 및 푸시
          if git diff --quiet -- docs/data/; then
            echo "No changes in data files to commit."
            exit 0
          fi

          # 변경 사항 커밋
          git add docs/data/
          git commit -m "chore: update disaster data (run ${{ github.run_number }})"

          # 먼저 푸시 시도 (경쟁 상황이 없으면 성공)
          if git push origin HEAD:main; then
            echo "Pushed without rebase."
          else
            echo "Push rejected, attempting rebase onto origin/main..."
            # 원격 변경사항을 리베이스 후 재시도
            git pull --rebase origin main
            git push origin HEAD:main
          fi
          
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
