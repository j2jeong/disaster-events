name: Update Disaster Data

on:
  schedule:
    - cron: "*/5 * * * *"  # 임시: 5분마다 (GitHub은 최소 5분 주기 권장)
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          cd crawler
          pip install -r requirements.txt

      - name: Run crawler
        run: |
          cd crawler
          python rsoe_crawler.py
          ls -al  # 디버그

      - name: Prepare docs directory
        run: |
          mkdir -p docs/data
          # Files are already in docs directory, just ensure data directory exists
          ls -la docs/  # Debug: show what's in docs directory
          
      - name: Copy data to docs/
        run: |
          if [ -f crawler/rsoe_events.json ]; then
            cp crawler/rsoe_events.json docs/data/events.json
          elif [ -f crawler/fixed_rsoe_events.json ]; then
            cp crawler/fixed_rsoe_events.json docs/data/events.json
          else
            echo "No new data file generated"; exit 1
          fi
          ls -al docs/data  # 디버그
      
      - name: Fix HTML file references and add cache busters
        run: |
          cd docs
          # Fix CSS filename reference (styles.css -> style.css)
          sed -i 's|href="styles\.css"|href="style.css?v='${GITHUB_RUN_NUMBER}'"|g' index.html
          # Add cache buster to script.js (remove existing ?v= first)
          sed -i 's|script\.js?v=[0-9]*"|script.js?v='${GITHUB_RUN_NUMBER}'"|g' index.html
          # If no cache buster exists, add one
          sed -i 's|src="script\.js"|src="script.js?v='${GITHUB_RUN_NUMBER}'"|g' index.html
          
          # Verify the changes
          echo "=== Updated index.html content ==="
          grep -E "(style\.css|script\.js)" index.html || echo "No matches found"
          
          echo "=== Files in docs directory ==="
          ls -la

      - name: Create last update timestamp
        run: |
          echo "Last updated: $(date -u)" > docs/data/last_update.txt

      - name: Commit updated site
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/
          git commit -m "chore: update site assets and data (run ${GITHUB_RUN_NUMBER})" || echo "no changes"
          git push

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4