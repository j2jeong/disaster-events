image: python:3.11-slim

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_DEPTH: "0"  # rebase 안전성 확보

stages:
  - build
  - deploy

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"      # 수동 실행 허용
    - if: $CI_COMMIT_BRANCH == "main"       # main 브랜치에서 실행

# NOTE: 이 파일을 sar_toolbox 루트로 복사하여 사용합니다.
# 모든 경로는 rsoe/ 하위로 스코프되어 있습니다.

crawl_data:
  stage: build
  resource_group: rsoe-data
  interruptible: true
  cache:
    key: pip-$CI_COMMIT_REF_SLUG
    paths:
      - .cache/pip
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - changes:
        - rsoe/**
    - if: $CI_COMMIT_BRANCH == "main"
  before_script:
    - python --version
    - pip install -r rsoe/crawler/requirements.txt
    - git config user.name "gitlab-ci[bot]"
    - git config user.email "gitlab-ci-bot@noreply"
    # GitLab Runner는 detached HEAD로 체크아웃되므로 브랜치로 이동
    - git fetch origin $CI_COMMIT_BRANCH || true
    - git checkout $CI_COMMIT_BRANCH || git checkout -B $CI_COMMIT_BRANCH
    # 푸시용 remote 토큰 설정 (CI/CD Variables에 GIT_PUSH_TOKEN 등록 필요)
    - |
      if [ -n "$GIT_PUSH_TOKEN" ]; then
        git remote set-url origin "https://oauth2:${GIT_PUSH_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
      else
        echo "GIT_PUSH_TOKEN is not set; will not push changes"
      fi
  script:
    - pushd rsoe
    - python crawler/rsoe_crawler.py
    - python crawler/merge_data.py
    - popd
    - |
      if [ -f rsoe/docs/data/events.json ]; then
        echo "✅ Data file exists: rsoe/docs/data/events.json"
        echo "File size: $(du -h rsoe/docs/data/events.json)"
        echo "Events count: $(grep -c '"event_id"' rsoe/docs/data/events.json || true)"
      else
        echo "⚠️ rsoe/docs/data/events.json not found"
      fi
    - echo "Last updated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" > rsoe/docs/data/last_update.txt
    - git status --porcelain
    - ls -lh rsoe/docs/data || true
    - |
      if git diff --quiet -- rsoe/docs/data/; then
        echo "No changes in data files to commit."
      else
        git add rsoe/docs/data/
        git commit -m "chore: update disaster data (pipeline ${CI_PIPELINE_ID}) [skip ci]"
        if [ -n "$GIT_PUSH_TOKEN" ]; then
          git push origin HEAD:$CI_COMMIT_BRANCH || (git pull --rebase origin $CI_COMMIT_BRANCH && git push origin HEAD:$CI_COMMIT_BRANCH)
        else
          echo "Skipping push because GIT_PUSH_TOKEN not set."
        fi
      fi
  artifacts:
    when: always
    expire_in: 1 hour
    paths:
      - rsoe/docs/data/events.json
      - rsoe/docs/data/past_events.json
      - rsoe/docs/data/last_update.txt

pages:
  stage: deploy
  needs: ["crawl_data"]
  resource_group: pages
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - changes:
        - rsoe/**
    - if: $CI_COMMIT_BRANCH == "main"
  script:
    - rm -rf public && mkdir -p public
    - cp -r rsoe/docs/* public/
  artifacts:
    paths:
      - public
